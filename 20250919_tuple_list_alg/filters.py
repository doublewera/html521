# Алгоритмы фильтрации (на ветвлениях)
#Алгоритм фильтрации подразумевает использование не всех 
# элементов последовательности. Критерии отбора могут быть самые разные
# Просматривая последовательность мы проверяем критерй 
# (он ещё называется умным словом "предикат")
# if критерий:

# Примеры задач:
# Выбрать из списка все двузначные числа (создать новый список)
# Выбрать из кортежа все строки, длина которых от 4 до 8 символов
# Выбрать из строки все слова, которые написаны с большой буквы

# Алгоритм
# Как узнать, двузначное число или нет?
# Способ №1: сделать из числа строку, измерить её длину 
# Способ №2: проверить, что число больше 9 и меньше 100 
# второй способ - лучше, оптимальнее, "дешевле"

# Синтаксис
# Превратить в строку str()
# Измерить длину строки len()

lst = [1, 45, 234, 5, 8, 2354, 5473, 567, 3, 57, 53, 4, 345, 38]
dvuzn = []
for chislo in lst:
    if chislo > 9 and chislo < 100:
        dvuzn.append(chislo)
print(dvuzn)


# Алгоритм 
# Перебрать список строк 
# Для каждой строки вычислить её длину и проверить: 
# Длина больше 4? Длина меньше 8? Условия выполняются одновременно?

# вычислить длину len()
# больше? >
# меньше? <

strings = ['шубка', 'шапка', 'варежки', 'шарфик', 'мешок', 'аллигатор', 'паук']
short = []
for s in strings:
    if len(s) > 4 and len(s) < 8:
        short.append(s)
print(short)

# Решение:
# Выбирать из строки слова - сложно. Надо сделать из строки список
# Узнать, большая буква или маленькая, можно по-разному
# 1. Можно посмотреть, принадлежит ли буква списку больших букв алфавита. 
# Чем это плохо? Тем, что придется перечислять все алфавиты мира
# 2. Можно посмотреть код символа и сравнить его с началом и концом номеров символов алфавита. 
# Чуть проще, но мы, Вера Олеговна, на кодах символов и 
# превращениях их обратно в буквы - точно загнемся 
# Можно сделать из первой буквы (а отдельный элемент строки - строка из одного символа!)
# БОЛЬШУЮ БУКВУ и сравнить с тем, что было. 
# Если было такое же, значит, оно большое!
# Такое же - это РАВНОЕ!
# В питоне сравнение на равенство делается ==
# Проверка, что НЕ РАВНО != (потом, если понадобится)

#C:\Users\Student\Documents\Barinova\521\20250919_tuple_list_alg>python
#Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
#Type "help", "copyright", "credits" or "license" for more information.
#Ctrl click to launch VS Code Native REPL
#>>> 'все ясно'.upper()
#'ВСЕ ЯСНО'


stroka = 'Поздравляем Вас с Новым Годом и желаем счастья!'
spisok = stroka.split()
bolshie = []
for slovo in spisok:
    if slovo[0] == slovo[0].upper():
        bolshie.append(slovo)
print(bolshie)

# Создать список lst всех чисел от 1 до 100. 
# 1. Из него (lst) создать список всех двузначных чисел, начинающихся на 5
# 2. Из него (lst) создать новый список - числа, которые содержат в составе 7
# напоминание in - оператор проверки вхождения  'bc' in 'abc' True
# 3. Из него (lst) создать список строк, содержащих каждый десяток отдельно
# 123456789, 10111213141516171819, 20212223.....  и т.д.
