# Форматирование строк - это подстановка в них значений
# 1. Конкатенация - плюсиком
# 2. f-строка (шаблон с мнговенным вычислением)
# 3. C-шная подстановка
# 4. C-шная подстановка с именованными переменными
#

name = 'Вера'  # Создание переменной
print('Привет,', name)  # Вывод на экран двух объетов: строки-константы 
                       # (литерала) и переменной строкового типа
chto = 'Привет,', name  # tuple - кортеж, похож на константный массив в js
print('chto = ', chto)

# Функция print принимает неограниченное количество параметров через запятую
# После каждого напечатанного значения параметра она ставит пробел
# В конце она ставит перенос строки

print('1'+'2'+'3')  # Конкатенация, склеивание строк

# Форматирование конкатенацией - один из способов форматирования строк
# Конкатенировать в питоне можно только строки

name = 'Вера'
print('Привет,' + name)  # Вычисление выражения происходит до печати
chto = 'Привет,' + name
print('chto = ', chto)

# Чтобы конкатенировать строку с любым другим объектом,
# сперва надо его привести (т.е. превратить) в строку

price = 20
fruit = 'яблоки'
print(fruit, ' стоят ', price, ' рублей')
tablichka = str(fruit) + ' стоят ' + str(price) + ' рублей'
print('табличка: ', tablichka)

# Форматирование f-строками
# Перед первой кавычкой ставится буква f
# Внутри вписываются переменные в фигурных скобках

apple = 20
strawberry = 200
cherry = 400
pricelist = f'apple = {apple}\nstrawberry = {strawberry}'  # {pie}'
print(pricelist)


# Подстановка в стиле языка C

# dt tovar price
#
#
#
v_bazu = "'2025-08-20','apple',20"
#  Типизированная подстановка
podstnov = "'%s','%s',%i"
# %s - строка, она же - универсальная подстановка
# %f - вещественное число
# %i - целое число
print(podstnov)
print(podstnov % ('2025-08-20', 'apple', 20))


# Подстановка в стиле языка C со словарем

# dt tovar price
#
#
#f'{a:5.8f}'
v_bazu = "'2025-08-20','apple',20"
#  Типизированная подстановка с названиями переменных
podstnov = "'%(val1)s','%(val2)s',%(val3)i"
# %s - строка, она же - универсальная подстановка
# %f - вещественное число
# %i - целое число
print(podstnov)
print(podstnov % {
    'val1': '2025-08-20',
    'val2': 'apple',
    'val3': 20
})

# Пример повторного использования переменных
# f-string
iashik = 20
banok = 15
task = f'''Задача: у меня {iashik} ящиков колы по {banok} банок в каждом.
 Сколько банок колы у меня всего?
Решение:
1) {iashik} * {banok} = {iashik * banok} (банок)
Ответ: у меня всего {iashik * banok} банок колы'''
print(task)

task = '''Задача: у меня %(iashik)i ящиков колы по %(banok)i банок в каждом.
 Сколько банок колы у меня всего?
Решение:
1) %(iashik)i * %(banok)i = %(total)i (банок)
Ответ: у меня всего %(total)i банок колы'''
print(task % {
    'iashik': iashik,
    'banok': banok,
    'total': iashik * banok
})

print(f'{iashik / banok:4.2f}')
# 4 символа ВСЕГО
# 2 - после точки
print(f'{iashik / banok:1.5f}')
print(f'{iashik / banok:15.5f}')
print(f'{iashik / banok:015.5f}')
print('%(smth)015.5f' % {
    'smth': iashik / banok
})
